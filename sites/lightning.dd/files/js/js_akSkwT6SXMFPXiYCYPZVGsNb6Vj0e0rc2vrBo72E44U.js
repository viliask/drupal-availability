!function(e,s){"use strict";function a(s,a){var n=e(a);e(".details-legend-prefix",n).removeClass("element-invisible"),n[e(".form-checkbox--vanilla",n).prop("checked")?"addClass":"removeClass"]("form--vanilla-on"),n.on("click",".form-checkbox",function(){var s=e(this);s[s.prop("checked")?"addClass":"removeClass"]("on"),s.hasClass("form-checkbox--vanilla")&&n[s.prop("checked")?"addClass":"removeClass"]("form--vanilla-on")}),e('select[name$="[style]"]',n).on("change",function(){var s=e(this);n.removeClass(function(e,s){return(s.match(/(^|\s)form--style-\S+/g)||[]).join(" ")}),""===s.val()?n.addClass("form--style-off"):n.addClass("form--style-on form--style-"+s.val())}).change(),e('select[name$="[responsive_image_style]"]',n).on("change",function(){var s=e(this);n[""===s.val()?"removeClass":"addClass"]("form--responsive-image-on")}).change(),e('select[name$="[media_switch]"]',n).on("change",function(){var s=e(this);n.removeClass(function(e,s){return(s.match(/(^|\s)form--media-switch-\S+/g)||[]).join(" ")}),n[""===s.val()?"removeClass":"addClass"]("form--media-switch-"+s.val())}).change(),n.on("mouseenter touchstart",".hint",function(){e(this).closest(".form-item").addClass("is-hovered")}),n.on("mouseleave touchend",".hint",function(){e(this).closest(".form-item").removeClass("is-hovered")}),n.on("click",".hint",function(){e(".form-item.is-selected",n).removeClass("is-selected"),e(this).parent().toggleClass("is-selected")}),n.on("click",".description",function(){e(this).closest(".is-selected").removeClass("is-selected")}),n.on("focus",".js-expandable",function(){e(this).parent().addClass("is-focused")}),n.on("blur",".js-expandable",function(){e(this).parent().removeClass("is-focused")})}function n(s,a){var n=e(a);n.siblings(".hint").length||n.closest(".form-item").append('<span class="hint">?</span>')}s.behaviors.blazyAdmin={attach:function(s){var o=e(".form--slick",s);e(".description",o).once("blazy-tooltip").each(n),o.once("blazy-admin").each(a)}}}(jQuery,Drupal);
;
/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/

(function ($, Drupal, window) {
  function TableResponsive(table) {
    this.table = table;
    this.$table = $(table);
    this.showText = Drupal.t('Show all columns');
    this.hideText = Drupal.t('Hide lower priority columns');

    this.$headers = this.$table.find('th');

    this.$link = $('<button type="button" class="link tableresponsive-toggle"></button>').attr('title', Drupal.t('Show table cells that were hidden to make the table fit within a small screen.')).on('click', $.proxy(this, 'eventhandlerToggleColumns'));

    this.$table.before($('<div class="tableresponsive-toggle-columns"></div>').append(this.$link));

    $(window).on('resize.tableresponsive', $.proxy(this, 'eventhandlerEvaluateColumnVisibility')).trigger('resize.tableresponsive');
  }

  Drupal.behaviors.tableResponsive = {
    attach: function attach(context, settings) {
      var $tables = $(context).find('table.responsive-enabled').once('tableresponsive');
      if ($tables.length) {
        var il = $tables.length;
        for (var i = 0; i < il; i++) {
          TableResponsive.tables.push(new TableResponsive($tables[i]));
        }
      }
    }
  };

  $.extend(TableResponsive, {
    tables: []
  });

  $.extend(TableResponsive.prototype, {
    eventhandlerEvaluateColumnVisibility: function eventhandlerEvaluateColumnVisibility(e) {
      var pegged = parseInt(this.$link.data('pegged'), 10);
      var hiddenLength = this.$headers.filter('.priority-medium:hidden, .priority-low:hidden').length;

      if (hiddenLength > 0) {
        this.$link.show().text(this.showText);
      }

      if (!pegged && hiddenLength === 0) {
        this.$link.hide().text(this.hideText);
      }
    },
    eventhandlerToggleColumns: function eventhandlerToggleColumns(e) {
      e.preventDefault();
      var self = this;
      var $hiddenHeaders = this.$headers.filter('.priority-medium:hidden, .priority-low:hidden');
      this.$revealedCells = this.$revealedCells || $();

      if ($hiddenHeaders.length > 0) {
        $hiddenHeaders.each(function (index, element) {
          var $header = $(this);
          var position = $header.prevAll('th').length;
          self.$table.find('tbody tr').each(function () {
            var $cells = $(this).find('td').eq(position);
            $cells.show();

            self.$revealedCells = $().add(self.$revealedCells).add($cells);
          });
          $header.show();

          self.$revealedCells = $().add(self.$revealedCells).add($header);
        });
        this.$link.text(this.hideText).data('pegged', 1);
      } else {
          this.$revealedCells.hide();

          this.$revealedCells.each(function (index, element) {
            var $cell = $(this);
            var properties = $cell.attr('style').split(';');
            var newProps = [];

            var match = /^display\s*:\s*none$/;
            for (var i = 0; i < properties.length; i++) {
              var prop = properties[i];
              prop.trim();

              var isDisplayNone = match.exec(prop);
              if (isDisplayNone) {
                continue;
              }
              newProps.push(prop);
            }

            $cell.attr('style', newProps.join(';'));
          });
          this.$link.text(this.showText).data('pegged', 0);

          $(window).trigger('resize.tableresponsive');
        }
    }
  });

  Drupal.TableResponsive = TableResponsive;
})(jQuery, Drupal, window);;
